data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_lycount_fuel,(x=~fueltype, y=~count,type='bar')%>%
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_lycount_fuel,(x=fueltype, y=count,type='bar')%>%
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_ly(count_fuel,x=fueltype, y=count,type='bar')%>%
layout(title = 'Count of Alternative Fuel Station by Fuel Type')
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_ly(count_fuel,x=~fueltype, y=~count,type='bar')%>%
layout(title = 'Count of Alternative Fuel Station by Fuel Type')
p2
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_ly(count_fuel,x=~fueltype, y=~reorder(count),type='bar')%>%
layout(title = 'Count of Alternative Fuel Station by Fuel Type')
p2
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_ly(count_fuel,x=~fueltype, y=~reorder(count,fueltype),type='bar')%>%
layout(title = 'Count of Alternative Fuel Station by Fuel Type')
p2
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_ly(count_fuel,x=~reorder(fueltype,count), y=~count,type='bar')%>%
layout(title = 'Count of Alternative Fuel Station by Fuel Type')
p2
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_ly(count_fuel,x=~reorder(fueltype,count), y=~count,type='bar')%>%
layout(title = 'Count of Alternative Fuel Station by Fuel Type',
xaxis = 'Fuel Type')
p2
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_ly(count_fuel,x=~reorder(fueltype,count), y=~count,type='bar')%>%
layout( xaxis = 'Fuel Type')
p2
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_ly(count_fuel,x=~reorder(fueltype,count), y=~count,type='bar')%>%
layout(xaxis = 'Fuel Type')
p2
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_ly(count_fuel,x=~reorder(fueltype,count), y=~count,type='bar')%>%
layout(title = 'Fuel Type by State',
xaxis = list(
type = 'category',
title = 'Fuel Type'))
p2
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2 <- plot_ly(count_fuel,x=~reorder(fueltype,count), y=~count,type='bar')%>%
layout(title = 'Count of Alternative Fuel',
xaxis = list(
type = 'category',
title = 'Fuel Type'))
p2
#plot1: station distribution by state
grouped_states <- group_by(data,State)
count_state = summarise(grouped_states, count=n())
p1 <- plot_ly(count_state,
x=~reorder(State,count),
y=~count,
type ='bar')%>%
layout(title = 'Alternative Fuel Station Distritbution in the US')
p1
#plot5
access_type = summarise(group_by(data,Access.Code,fueltype), count=n())
p5 <- plot_ly(access_type, x=~reorder(Access.Code,count), y=~count, color=~fueltype)%>%
layout(title = 'Fuel Type by Access')
p5
View(state_type)
fueltype
data$fueltype
# plot3: state vs fuel type
state_type = summarise(group_by(data,State,fueltype),count =n())
p3 <- plot_ly(state_type, x = ~State, y = ~Electric, type = 'bar', name ='Electric')%>%
add_trace(y =~Compressed Natural Gas, name ='Compressed Natural Gas')%>%
# plot3: state vs fuel type
state_type = summarise(group_by(data,State,fueltype),count =n())
p3 <- plot_ly(state_type, x = ~State, y = ~fueltype$Electric, type = 'bar', name ='Electric')%>%
add_trace(y =~Compressed Natural Gas, name ='Compressed Natural Gas')%>%
# plot3: state vs fuel type
state_type = summarise(group_by(data,State,fueltype),count =n())
p3 <- plot_ly(state_type, x = ~State, y = ~fueltype$Electric, type = 'bar', name ='Electric')%>%
add_trace(y =~fueltype$Compressed Natural Gas, name ='Compressed Natural Gas')%>%
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2_1 <- plot_ly(count_fuel,x=~reorder(fueltype,count), y=~count,type='bar',marker = list(color = c('rgba(204,204,204,1)','rgba(204,204,204,1)', 'rgba(204,204,204,1)','rgba(204,204,204,1)','rgba(204,204,204,1)','rgba(222,45,38,0.8)')))%>%
layout(title = 'Count of Alternative Fuel',
xaxis = list(
type = 'category',
title = 'Fuel Type'))
p2_1
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2_1 <- plot_ly(count_fuel,x=~fueltype,count, y=~count,type='bar',marker = list(color = c('rgba(204,204,204,1)','rgba(204,204,204,1)', 'rgba(204,204,204,1)','rgba(204,204,204,1)','rgba(204,204,204,1)','rgba(222,45,38,0.8)')))%>%
layout(title = 'Count of Alternative Fuel',
xaxis = list(
type = 'category',
title = 'Fuel Type'))
p2_1
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2_1 <- plot_ly(count_fuel,x=~fueltype, y=~count,type='bar',marker = list(color = c('rgba(204,204,204,1)','rgba(204,204,204,1)', 'rgba(204,204,204,1)','rgba(204,204,204,1)','rgba(204,204,204,1)','rgba(222,45,38,0.8)')))%>%
layout(title = 'Count of Alternative Fuel',
xaxis = list(
type = 'category',
title = 'Fuel Type'))
p2_1
#plot2: fuel type count
data$fueltype = as.character(data$Fuel.Type.Code)
data$fueltype[data$fueltype == "ELEC"] <- "Electric"
data$fueltype[data$fueltype == "CNG"] <- 'Compressed Natural Gas'
data$fueltype[data$fueltype == "BD"] <- 'Biodiesel (B20 and above)'
data$fueltype[data$fueltype == "E85"] <- 'Ethanol (E85)'
data$fueltype[data$fueltype == "HY"] <- 'Hydrogen'
data$fueltype[data$fueltype == "LNG"] <- 'Liquefied Natural Gas'
data$fueltype[data$fueltype == "LPG"] <- 'Liquefied Petroleum Gas (Propane)'
grouped_fuel <- group_by(data,fueltype)
count_fuel = summarise(grouped_fuel,count=n())
p2_1 <- plot_ly(count_fuel,x=~fueltype, y=~count,type='bar',marker = list(color = c('rgba(204,204,204,1)','rgba(204,204,204,1)','rgba(222,45,38,0.8)',                                                                'rgba(204,204,204,1)','rgba(204,204,204,1)',                                                                        'rgba(204,204,204,1)','rgba(204,204,204,1)')))%>%
layout(title = 'Count of Alternative Fuel',
xaxis = list(
type = 'category',
title = 'Fuel Type'))
p2_1
#plot5
access_type = summarise(group_by(data,Access.Code,fueltype), count=n())
p5 <- plot_ly(access_type, x=~Access.Code, y=~count, color=~fueltype)%>%
layout(title = 'Fuel Type by Access',
xaxis = list(title='Access Type'))
p5
# plot3: state vs fuel type
state_type = summarise(group_by(data,State,fueltype),count =n())
p3 <- plot_ly(state_type, x = ~State, y = ~fueltype, type = 'bar')%>%
layout(title = 'Fuel Type Distribution by State',
yaxis = list(title = 'Count'), barmode = 'stack'))
# plot3: state vs fuel type
state_type = summarise(group_by(data,State,fueltype),count =n())
p3 <- plot_ly(state_type, x = ~State, y = ~fueltype, type = 'bar')%>%
layout(title = 'Fuel Type Distribution by State')
p3
# plot3: state vs fuel type
state_type = summarise(group_by(data,State,fueltype),count =n())
p3 <- plot_ly(state_type, x = ~State, y = ~count, color=fueltype, type = 'bar')%>%
layout(title = 'Fuel Type Distribution by State')
# plot3: state vs fuel type
state_type = summarise(group_by(data,State,fueltype),count =n())
p3 <- plot_ly(state_type, x = ~State, y = ~count, color=~fueltype, type = 'bar')%>%
layout(title = 'Fuel Type Distribution by State')
p3
state_type[state_type$State == c(CA,TX,FL,NY,WA)]
state_type[state_type$State == CA]
state_type[state_type$State == 'CA']
state_type$State == 'CA'
state_type[state_type$State == 'CA'] == TRUE
state_type$State[state_type$State == 'CA']
state_type$count
state_type$count[state_type$State =='CA']
state_type$fueltype[state_type$State =='CA']
state_type$fueltype
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 5 states are: CA, TX, FL, NY and WA
state_type[state_type$State == c(CA,TX,FL,NY,WA)]
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 5 states are: CA, TX, FL, NY and WA
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fl = state_type$count[state_type$State =='FL']
ny = state_type$count[state_type$State =='NY']
wa = state_type$count[state_type$State =='WA']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen","Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df = data.frame(fueltype,ca,tx,fl,ny,wa)
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 5 states are: CA, TX, FL, NY and WA
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fl = state_type$count[state_type$State =='FL']
ny = state_type$count[state_type$State =='NY']
wa = state_type$count[state_type$State =='WA']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx,fl,ny,wa)
state_type$count[state_type$State =='WA']
state_type$count[state_type$State =='NY']
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 5 states are: CA, TX, FL, NY and WA
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fl = state_type$count[state_type$State =='FL']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx,fl,ny,wa)
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 5 states are: CA, TX, FL, NY and WA
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fl = state_type$count[state_type$State =='FL']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx,fl)
state_type$count[state_type$State =='FL']
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 2 states are: CA, TX
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx)
p <- plot_ly(df, x = ~fueltype, y = ~ca, type = 'bar', name = 'CA') %>%
add_trace(y = ~tx, name = 'TX') %>%
add_trace(y = ~fl, name = 'FL') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 2 states are: CA, TX
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx)
p <- plot_ly(df, x = ~fueltype, y = ~ca, type = 'bar', name = 'CA') %>%
add_trace(y = ~tx, name = 'TX') %>%
add_trace(y = ~fl, name = 'FL') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 2 states are: CA, TX
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx)
p <- plot_ly(df, x = ~fueltype, y = ~ca, type = 'bar', name = 'CA') %>%
add_trace(y = ~tx, name = 'TX') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 2 states are: CA, TX
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx)
p <- plot_ly(df, x = ~fueltype, y = ~ca, type = 'bar', name = 'CA') %>%
add_trace(y = ~tx, name = 'TX') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 2 states are: CA, TX
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx)
p <- plot_ly(df, x = ~ca, y = ~fueltype, type = 'bar', name = 'CA') %>%
add_trace(x = ~tx, name = 'TX') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 2 states are: CA, TX
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx)
p <- plot_ly(df, x = ~ca, y = ~fueltype, type = 'bar', name = 'CA') %>%
add_trace(x = ~tx, name = 'TX') %>%
layout(xaxis = list(title = 'Count'), barmode = 'stack')
p
# plot top 5 state with most altinative fuel stations and the fuel type
# from plot 2, top 2 states are: CA, TX
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx)
p <- plot_ly(df, x = ~fueltype, y = ~ca, type = 'bar', name = 'CA') %>%
add_trace(y = ~tx, name = 'TX') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
# plot 4: Comparing Fuel Type Distribution between Top 2 States
# compare top 2 states with the most stations and see how fuel type distributed in two states
# from plot 2, top 2 states are: CA, TX
ca = state_type$count[state_type$State =='CA']
tx = state_type$count[state_type$State =='TX']
fueltype = c('Biodiesel (B20 and above)',"Compressed Natural Gas","Electric",
"Ethanol (E85)","Hydrogen",
"Liquefied Natural Gas","Liquefied Petroleum Gas (Propane)")
df <- data.frame(fueltype,ca,tx)
p <- plot_ly(df, x = ~fueltype, y = ~ca, type = 'bar', name = 'CA') %>%
add_trace(y = ~tx, name = 'TX') %>%
layout(title = 'Comparing Fuel Type Distribution between Top 2 States',
yaxis = list(title = 'Count'), barmode = 'stack')
p
shiny::runApp('Desktop/fall2019-proj2--sec1-grp8/test')
getwd()
runApp('Desktop/fall2019-proj2--sec1-grp8/test')
altfuel <- read.csv("/Users/suzyg./Desktop/fall2019-proj2--sec1-grp8/test/alt_fuel_stations.csv")
runApp('Desktop/fall2019-proj2--sec1-grp8/test')
getwd()
runApp('Desktop/fall2019-proj2--sec1-grp8/test')
runApp('Desktop/fall2019-proj2--sec1-grp8/data')
altfuel <- read.csv("/Users/suzyg./Desktop/fall2019-proj2--sec1-grp8/data/alt_fuel_stations.csv")
car_data <- read.csv("/Users/suzyg./Desktop/fall2019-proj2--sec1-grp8/data/light-duty-vehicles.csv")
runApp('Desktop/fall2019-proj2--sec1-grp8/data')
runApp('Desktop/fall2019-proj2--sec1-grp8/data')
runApp('Desktop/fall2019-proj2--sec1-grp8/data')
getwd()
runApp('Desktop/fall2019-proj2--sec1-grp8/data')
runApp('Desktop/fall2019-proj2--sec1-grp8/data')
runApp('Desktop/fall2019-proj2--sec1-grp8/data')
setwd('/User/suzyg/')
setwd('/User/suzyg.')
setwd('/User/Suzyg.')
setwd('/User/suzyg.')
getwd()
runApp('Desktop/fall2019-proj2--sec1-grp8/data')
runApp('Desktop/fall2019-proj2--sec1-grp8/data')
shiny::runApp('Desktop/fall2019-proj2--sec1-grp8/data')
runApp('Desktop/fall2019-proj2--sec1-grp8')
runApp('Desktop/fall2019-proj2--sec1-grp8')
runApp('Desktop/data')
altfuel <- read.csv("/Users/suzyg./Desktop/data/alt_fuel_stations.csv")
getwd()
runApp('Desktop/data')
setwd('/Users/suzyg./Desktop/fall2019-proj2--sec1-grp8')
altfuel <- read.csv("~/data/alt_fuel_stations.csv")
altfuel <- read.csv("data/alt_fuel_stations.csv")
runApp('data')
car_data <- read.csv("data/light-duty-vehicles.csv")
runApp('data')
runApp('data')
runApp('data')
getwd()
setwd('/Users/suzyg.')
runApp('Desktop/fall2019-proj2--sec1-grp8/data')
runApp('Desktop/fall2019-proj2--sec1-grp8/application')
runApp('Desktop/fall2019-proj2--sec1-grp8/application')
runApp('Desktop/fall2019-proj2--sec1-grp8/application')
altfuel <- read.csv("application/data/alt_fuel_stations.csv")
setwd('/Users/suzyg./Desktop/fall2019-proj2--sec1-grp8')
altfuel <- read.csv("application/data/alt_fuel_stations.csv")
runApp('application')
runApp('application')
car_data <- read.csv("application/data/light-duty-vehicles.csv")
runApp('application')
runApp('application')
runApp('application')
runApp('application')
runApp('~/Desktop/fall2019-proj2--sec1-grp8/app')
install.packages('pracma')
runApp('~/Desktop/fall2019-proj2--sec1-grp8/app')
install.packages('gbutils')
runApp('~/Desktop/fall2019-proj2--sec1-grp8/app')
getwd()
setwd("/Users/suzyg./fall2019-proj2--sec1-grp8")
setwd("/Users/suzyg./Desktop/fall2019-proj2--sec1-grp8")
runApp('app')
runApp('app')
altfuel <- read.csv("data/alt_fuel_stations.csv")
# fuel project
# import data
setwd("/Users/suzyg./Desktop/fall2019-proj2--sec1-grp8")
runApp('app')
